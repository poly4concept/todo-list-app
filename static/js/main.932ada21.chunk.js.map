{"version":3,"sources":["Components/Form.js","Components/FilterButton.js","Components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","editFieldRef","useRef","editButtonRef","isEditing","setEditing","newName","setNewName","wasEditing","ref","useEffect","current","usePrevious","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","editedTaskList","remainingTasks","taskList","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","role","aria-labelledby","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.932ada21.chunk.js","sourcesContent":["import React, { useState } from \"react\";  \r\n\r\n\r\nfunction Form(props) {\r\n\r\n  const [name, setName] = useState('');\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  }\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n  \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n        <h2 className=\"label-wrapper\">\r\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n            What needs to be done?\r\n          </label>\r\n        </h2>\r\n        <input\r\n          type=\"text\"\r\n          id=\"new-todo-input\"\r\n          className=\"input input__lg\"\r\n          name=\"text\"\r\n          autoComplete=\"off\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n          Add\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n  export default Form;","import React from \"react\";\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn toggle-btn\"\r\n      aria-pressed={props.isPressed}\r\n      onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span>{props.name}</span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n  export default FilterButton;","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nexport default function Todo(props) {\r\n\r\n  const editFieldRef = useRef(null);\r\n  const editButtonRef = useRef(null);\r\n\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n\r\n  const wasEditing = usePrevious(isEditing);\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input id={props.id} className=\"todo-text\" type=\"text\" onChange={handleChange} ref={editFieldRef} />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn todo-cancel\"\r\n          onClick={() => setEditing(false)}\r\n        >\r\n          Cancel\r\n          <span className=\"visually-hidden\">renaming {props.name}</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n          <input\r\n            id={props.id}\r\n            type=\"checkbox\"\r\n            defaultChecked={props.completed}\r\n            onChange={() => props.toggleTaskCompleted(props.id)}\r\n          />\r\n          <label className=\"todo-label\" htmlFor={props.id}>\r\n            {props.name}\r\n          </label>\r\n        </div>\r\n        <div className=\"btn-group\">\r\n          <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)} ref={editButtonRef}>\r\n            Edit <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn__danger\"\r\n            onClick={() => props.deleteTask(props.id)}\r\n          >\r\n            Delete <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n        </div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n  if (!wasEditing && isEditing) {\r\n    editFieldRef.current.focus();\r\n  }\r\n  if (wasEditing && !isEditing) {\r\n    editButtonRef.current.focus();\r\n  }\r\n}, [wasEditing, isEditing]);\r\n  \r\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n  }","import React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./Components/Form\";\nimport FilterButton from \"./Components/FilterButton\";\nimport Todo from \"./Components/Todo\";\nimport { nanoid } from \"nanoid\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  const taskList = tasks\n.filter(FILTER_MAP[filter])\n.map(task => (\n  <Todo\n    id={task.id}\n    name={task.name}\n    completed={task.completed}\n    key={task.id}\n    toggleTaskCompleted={toggleTaskCompleted}\n    deleteTask={deleteTask}\n    editTask={editTask}\n  />\n));\n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ))\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  const listHeadingRef = useRef(null);\n\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>Todo App</h1>\n      <Form  addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n      {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n      {taskList}\n      </ul>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nconst DATA = [\n    { id: \"todo-0\", name: \"Eat\", completed: true },\n    { id: \"todo-1\", name: \"Sleep\", completed: false },\n    { id: \"todo-2\", name: \"Repeat\", completed: false }\n  ];\n\n  ReactDOM.render(<App tasks={DATA} />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}